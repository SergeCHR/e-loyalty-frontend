/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const NotAuthenticatedLazyImport = createFileRoute('/not-authenticated')()
const IndexLazyImport = createFileRoute('/')()
const DashboardIndexLazyImport = createFileRoute('/dashboard/')()
const AuthTestLazyImport = createFileRoute('/auth/test')()
const AuthResetPasswordLazyImport = createFileRoute('/auth/reset-password')()
const AuthRegisterLazyImport = createFileRoute('/auth/register')()
const AuthLoginLazyImport = createFileRoute('/auth/login')()
const DashboardSettingsIndexLazyImport = createFileRoute(
  '/dashboard/settings/',
)()
const DashboardDocsIndexLazyImport = createFileRoute('/dashboard/docs/')()

// Create/Update Routes

const NotAuthenticatedLazyRoute = NotAuthenticatedLazyImport.update({
  path: '/not-authenticated',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/not-authenticated.lazy').then((d) => d.Route),
)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const DashboardIndexLazyRoute = DashboardIndexLazyImport.update({
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/dashboard/index.lazy').then((d) => d.Route),
)

const AuthTestLazyRoute = AuthTestLazyImport.update({
  path: '/auth/test',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/test.lazy').then((d) => d.Route))

const AuthResetPasswordLazyRoute = AuthResetPasswordLazyImport.update({
  path: '/auth/reset-password',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/auth/reset-password.lazy').then((d) => d.Route),
)

const AuthRegisterLazyRoute = AuthRegisterLazyImport.update({
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/register.lazy').then((d) => d.Route))

const AuthLoginLazyRoute = AuthLoginLazyImport.update({
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/login.lazy').then((d) => d.Route))

const DashboardSettingsIndexLazyRoute = DashboardSettingsIndexLazyImport.update(
  {
    path: '/dashboard/settings/',
    getParentRoute: () => rootRoute,
  } as any,
).lazy(() =>
  import('./routes/dashboard/settings/index.lazy').then((d) => d.Route),
)

const DashboardDocsIndexLazyRoute = DashboardDocsIndexLazyImport.update({
  path: '/dashboard/docs/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/dashboard/docs/index.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/not-authenticated': {
      preLoaderRoute: typeof NotAuthenticatedLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      preLoaderRoute: typeof AuthLoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      preLoaderRoute: typeof AuthRegisterLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/reset-password': {
      preLoaderRoute: typeof AuthResetPasswordLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/test': {
      preLoaderRoute: typeof AuthTestLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      preLoaderRoute: typeof DashboardIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/docs/': {
      preLoaderRoute: typeof DashboardDocsIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/settings/': {
      preLoaderRoute: typeof DashboardSettingsIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  NotAuthenticatedLazyRoute,
  AuthLoginLazyRoute,
  AuthRegisterLazyRoute,
  AuthResetPasswordLazyRoute,
  AuthTestLazyRoute,
  DashboardIndexLazyRoute,
  DashboardDocsIndexLazyRoute,
  DashboardSettingsIndexLazyRoute,
])

/* prettier-ignore-end */
